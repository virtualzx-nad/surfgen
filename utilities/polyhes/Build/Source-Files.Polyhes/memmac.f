      SUBROUTINE GETMEM(LEN,IA,IAP,IFAIL)
      DIMENSION IA(*)
C
C         GET MEMORY
C
      IFAIL=0
      LBYTE=LEN*8
C       GET 4 EXTRA WORDS (BUT DONT TELL ANYONE)
      LBYTE=LBYTE+32
C         IP2= ADDRESS OF IA
C         IP1= ADDRESS OF MEMORY START (FROM MALLOC)
      CALL CGETMEM(IA,LBYTE,IP1,IP2)
C         IAP POINTS TO AN OFFSET IN IA WHERE THE SPACE BEGINS
      IAP=(IP1-IP2)/4+1
      WRITE(6,1000)LEN, IP1,IP2,IAP
 1000 FORMAT(/,' *** GET MEMORY: ',I8,' R*8 WORDS ALLOCATED', /5X,
     X           ' MALLOC= ',I10, ' M-REF= ', I10, ' NET= ', I10)
      IF(IP1.EQ.0)IFAIL=1
      RETURN
      END
      SUBROUTINE GETSIZ(ICORE)
      CHARACTER*31 CCORE
      DIMENSION IMAP(10)
      CHARACTER*1 IX(10),BLANK
      DATA IX/'1','2','3','4','5','6','7','8','9','0'/
      DATA IMAP/11,12,13,14,15,16,17,18,19,10/
      DATA BLANK/' '/
      II=IARGC()
      CALL GETARG(II,CCORE)
C
      JX=0
      DO 1 I=1,31
      IF(CCORE(I:I).EQ.BLANK)GO TO 11
    1 JX=JX+1
   11 CONTINUE
C
      ICORE=0
      ITEN=1
      DO 5 J=1,JX
      KX=0
      IC=JX+1-J
      DO 2 K=1,10
      KX=KX+1
      IF(CCORE(IC:IC).EQ.IX(K))GO TO 3
    2 CONTINUE
      WRITE(6,*)' DEFAULT CORE SIZE USED '
      ICORE=1500000
      GO TO 25
    3 CONTINUE
      INUM=IMAP(KX)-10
      ICORE=ICORE+INUM*ITEN
      ITEN=ITEN*10
    5 CONTINUE
C
   25 CONTINUE
C
      WRITE(6,100)ICORE
  100 FORMAT(//,' *** DYNAMIC CORE SIZE =',I10,' R*8 WORDS ***',//)
      RETURN
      END

      SUBROUTINE JTIME(ITIME)
C         time in hundredths of seconds
      ITIME=MCLOCK()
      RETURN
      END
      SUBROUTINE SYSTIME(X1,X2,X3)
      REAL X1,X2,X3,TARRAY(2),ETIME
C
C     X1=TOTAL TIME (SYSTEM+USER) IN SECONDS
C     X2=USER TIME IN SECONDS
C     X3=SYSTEM TIME IN SECONDS
C
      TARRAY(1)=0.0
      TARRAY(2)=0.0
CDRY      X1=ETIME(TARRAY)
CDRY      X2=TARRAY(1)
CDRY      X3=TARRAY(2)
      X2=DFLOAT(MCLOCK()/100)
      X3=0.0
      X1=X2
      RETURN
      END
      FUNCTION FDATE(I)
      CHARACTER*24 FDATE
      CHARACTER*24 ADATE
      CALL DATE(ADATE)
      FDATE=ADATE
      RETURN
      END
      SUBROUTINE DATE(DATEVAX)
      CHARACTER*26 DATESTR
      CHARACTER*24 DATEVAX
      INTEGER*4 LONGINT
      CALL TIME(LONGINT)
      CALL CDATE(DATESTR,LONGINT)
      DATEVAX(:24)=DATESTR(:24)
      RETURN
      END
